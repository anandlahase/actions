name: Update and Merge Workflow

on:
  workflow_dispatch:
    inputs:
      choice:
        description: 'Select input to update: extraVars, inventory, deploymentManifest'
        required: true
        default: 'extraVars'
        options:
          extraVars: 'Update extraVars'
          inventory: 'Update inventory'
          deploymentManifest: 'Update deploymentManifest'

  push:
    paths:
      - 'prod/extraVars'  # Specify the directory structure where changes should trigger the workflow

jobs:
  update_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Directories
        run: mkdir -p prod/extraVars && mkdir -p prod/inventory && mkdir -p prod/deploymentManifest

      - name: Validate Input
        id: validate_input
        run: |
          choice="${{ github.event.inputs.choice }}"
          if [[ $choice != "extraVars" && $choice != "inventory" && $choice != "deploymentManifest" ]]; then
            echo "Invalid choice. Please choose one of: extraVars, inventory, deploymentManifest"
            exit 1
          fi
          echo "::set-output name=CHOICE::$choice"

      - name: Setup Approval Environment
        id: approval_setup
        if: github.event_name == 'workflow_dispatch'
        run: echo "Setting up approval environment..."

      - name: Update Inputs
        id: update_inputs
        run: |
          choice="${{ steps.validate_input.outputs.CHOICE }}"
          case $choice in
            "extraVars")
              cp non-prod/extraVars/*.json prod/extraVars/
              ;;
            "inventory")
              cp non-prod/inventory/*.json prod/inventory/
              ;;
            "deploymentManifest")
              cp non-prod/deploymentManifest/*.json prod/deploymentManifest/
              ;;
            *)
              echo "Invalid choice"
              exit 1
              ;;
          esac
          echo "Inputs updated for $choice"

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v3
        with:
          title: "Update $CHOICE dropdown inputs"
          branch: update-$CHOICE-inputs
          commit-message: "Update $CHOICE dropdown inputs"
          body: |
            Automated update of $CHOICE dropdown inputs.
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for Pull Request Approval
        id: wait_for_approval
        if: steps.create_pr.outputs.pull-request-created == 'true'
        run: echo "Waiting for approval..."

      - name: Merge Pull Request
        if: steps.wait_for_approval.outputs.data.mergeable == true
        run: echo "Merging PR..."

      - name: Copy Files to Destination Directory
        if: steps.wait_for_approval.outputs.data.mergeable == true
        run: echo "Copying files..."

      - name: Commit and Push Changes
        if: steps.wait_for_approval.outputs.data.mergeable == true
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "youremail@example.com"
          git add .
          git commit -m "Update $CHOICE dropdown inputs"
          git push origin HEAD:update-$CHOICE-inputs